name: build for PR
  
on: 
  workflow_dispatch:
    inputs:
      Environment: 
        description: "Environment"
        required: true
        default: 'test'
  pull_request:
    branches: [master]
  
jobs:
  initialization:
    runs-on: ubuntu-latest
    outputs: 
      branchName: ${{ steps.setupBranchName.outputs.branchName }}
    steps:
      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV
      - name: Set up branch_name output
        id: setupBranchName
        run: |
          echo ${{ env.BRANCH_NAME }}
          echo "::set-output name=branchName::${{ env.BRANCH_NAME }}"

  build:
    runs-on: ubuntu-latest
    needs: initialization
    steps:
      - uses: actions/checkout@v1
      - run: echo "building stage"
      - name: "named step"
        run: echo "this is named echo task" 
      - name: "show github.event context"
        run: echo "${{github.event}}"
      - name: "show github.event_name param"
        run: echo "${{github.event_name}}"
      - name: "print if run manually"
        run: echo "This was run manually"
        if: github.event_name == 'workflow_dispatch'
      - name: "print current branch name"
        run: |
          echo "${{ needs.initialization.outputs.branchName }}"
      - uses: actions/checkout@v2
      - name: TEST COMPOSITE ACTION
        uses: erlanbetpawa/testaction@v2
        with: 
          registry_username: ${{secrets.REGISTRY_USERNAME}}
          registry_password: ${{secrets.REGISTRY_PASSWORD}}

  testIf: 
    runs-on: ubuntu-latest
    steps:
      - run: [[ -v ${{github.event.release.tag_name}} ]] && echo "test text"
        
  test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "this is PR test"
      - name: "second"
        run: echo mecho techo
      - name: "Conditional doesn't work if it's master branch and input is test or develop"
        run: echo ===============conditional================
        if: contains(github.ref, 'master') || (github.event.inputs.Environment != 'test' && github.event.inputs.Environment != 'develop')
